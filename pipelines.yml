##### JFrog - Ran Cli Pipeline #####
valuesFilePath: ./values.yml

resources:

# Application source repository
  - name: ran_cli
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitIntegration }}
      path: {{ .Values.gitRepositoryPath }}              
      branches:
        include: master
      buildOn:
        commit: true

# Bulid info for build image by pipeline
  - name: cli_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.artifactoryIntegration }} 

##### JFrog Pipeline Steps #####

pipelines:
  - name: ran_cli_pipeline
    steps:
      
      # Step 1 - Build App Image 
      - name: Build
        type: DockerBuild
        configuration:
          affinityGroup: ran_cli_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: {{ .Values.artifactoryUrl }}/{{ .Values.sourceRepository }}/{{ .Values.imageName }}  
          dockerImageTag: ${run_number}
          inputResources:
            - name: ran_cli
          integrations:
            - name: {{ .Values.artifactoryIntegration }} 

      # Step 2 - Push to Artifactory
      - name: Push
        type: DockerPush
        configuration:
          affinityGroup: ran_cli_group
          forceXrayScan: false
          failOnScan: false
          targetRepository: {{ .Values.sourceRepository }}
          integrations:
            - name: {{ .Values.artifactoryIntegration }}                  
          inputSteps:
            - name: Build

        execution:
          onStart:
            - echo "Preparing for work..."
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete:
            - echo "Cleaning up some stuff"
      
      # Step 3 - Push to Artifactory
      - name: Publish_app_build
        type: PublishBuildInfo
        configuration:
          affinityGroup: ran_cli_group
          inputSteps:
            - name: Push
          outputResources:
            - name: cli_buildinfo

      # Step 4 - Xray Scan
      - name: Xray
        type: XrayScan
        configuration:
          affinityGroup: ran_cli_group
          inputResources:
            - name: cli_buildinfo