##### JFrog - Ran Cli Pipeline #####

resources:
# Application source repository
  - name: ran_cli
    type: GitRepo
    configuration:
      gitProvider: MyGithub
      path: Ransela17/ran-cli                
      branches:
        include: master
      buildOn:
        commit: true

# Configutaion source repository
  - name: pipeline_config
    type: GitRepo
    configuration:
      gitProvider: MyGithub
      path: Ransela17/pipelines_config                 
      branches:
        include: master
      # buildOn:
      #   commit: true

#####


# New image location and source
  - name: ran_new_image
    type: Image
    configuration:
      registry: MyArtifactory                             
      sourceRepository: ran-cli            
      imageName: pe16510rans.jfrog.io/artifactory/ran-cli/ran-cli/ 
      imageTag: ${run_number}
      autoPull: true

# # Bulid info for build image by pipeline
#   - name: cli_build
#     type: BuildInfo
#     configuration:
#       sourceArtifactory: ran-cli
#       buildName: SampleApp
#       buildNumber: 1 

# ######





##### JFrog Pipeline Steps #####

pipelines:
  - name: demo_pipelines
    steps:
      - name: demostep
        type: DockerBuild
        configuration:
          affinityGroup: ran_cli_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: pe16510rans.jfrog.io/artifactory/ran-cli/ran-cli  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: pipeline_config
          integrations:
            - name: MyArtifactory

      - name: demostep2Push
        type: DockerPush
        configuration:
          affinityGroup: ran_cli_group
          forceXrayScan: true
          failOnScan: true
          targetRepository: ran-cli/ran-cli/
          integrations:
            - name: MyArtifactory                 
          inputSteps:
            - name: demostep

        execution:
          onStart:
            - echo "Preparing for work..."
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete:
            - echo "Cleaning up some stuff"




      # - name: xray
      #   type: XrayScan
      #   configuration:
      #     affinityGroup: ran_cli_group
      #     inputResources:
      #       - name: cli_build